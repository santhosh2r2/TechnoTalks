---
import { getCollection } from "astro:content";

type Article  ={
  title: string,
  url: string,
  tags: string[] | undefined,
  createdDate: Date | undefined, //ISO string
  duration: number, //in minutes
}

let latestArticles : Article[]= [];


async function getLatestArticles(showTopX: number){

  let articles: Article[]= [];

  await getCollection("docs", (collectionEntry) => {
    // console.log({ collection });
    let { data, body , slug} = collectionEntry;
    
    if(slug.includes("blog/")){
      let {date, title, tags } = data;
      articles.push({
        createdDate: date,
        title,
        tags,
        url: slug,
        duration : calculateReadingTime(body)
      })
    }
  });

  articles.sort((a, b) =>  {
    if(a.createdDate && b.createdDate)
    return b.createdDate.getTime() -a.createdDate.getTime();
  return 0
  });

  latestArticles = articles.slice(0, showTopX);
  
}
function calculateReadingTime(text: string) : number{
  const wordsPerMinute = 200; // Average reading speed
  const words = text.split(/\s+/).length;
  const minutes = Math.ceil(words / wordsPerMinute);
  return minutes;
}

await getLatestArticles(5)


---

<!-- <div class="latest-articles"> -->
  {latestArticles.map(article => (
    <a href={article.url} class="card">
      <div class="card-content">
        <div class="card-title">
          {article.title}
          ・ <span class="card-date">{article.createdDate?.toLocaleDateString()}</span>
          ・ <span class="card-date">{article.duration} min</span>
        </div>
        {article.tags && article.tags.length > 0 && article.tags.length > 0 && (
          <div class="card-tags">
            {article.tags.map(tag => (
              <span class="card-tag">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </a>
  ))}
<!-- </div> -->

<style is:global>
  :root {
    --color-background: #ffffff;
    --color-text: #333333;
    --color-secondary-text: #666666;
    --color-link: #3498db;
    --color-link-hover: #2980b9;
    --color-card-shadow: rgba(0, 0, 0, 0.1);
    --color-card-hover-shadow: rgba(0, 0, 0, 0.2);
    --color-tag-background: #e0e0e0;
    --color-tag-text: #333333;
  }

  [data-theme='dark'] {
    --color-background: #1e1e1e;
    --color-text: #e0e0e0;
    --color-secondary-text: #aaaaaa;
    --color-link: #82cfff;
    --color-link-hover: #66b3ff;
    --color-card-shadow: rgba(0, 0, 0, 0.6);
    --color-card-hover-shadow: rgba(0, 0, 0, 0.8);
    --color-tag-background: #333333;
    --color-tag-text: #e0e0e0;
  }
</style>

<style>
  .latest-articles {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
  }

  .card {
    /* width: 300px; */
    width: auto;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 8px var(--color-card-shadow);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background-color: var(--color-background);
    margin: 20px auto;
    text-decoration: none;
    color: var(--color-text);
    display: block;
  }

  .card-content {
    padding: 15px;
  }

  .card-title {
    /* font-size: 1.5em; */
    margin-bottom: 10px;
    color: var(--color-text);
  }

  .card-tags {
    margin-bottom: 10px;
  }

  .card-tag {
    background-color: var(--color-tag-background);
    color: var(--color-tag-text);
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.8em;
    margin-right: 5px;
    display: inline-block;
    margin-bottom: 5px;
  }

  .card-date {
    font-size: 0.9em;
    color: var(--color-secondary-text);
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px var(--color-card-hover-shadow);
  }
</style>
